{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/TypeScriptにおける代入可能関係の推移性/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://sititou70.github.io"}},"markdownRemark":{"excerpt":"小ネタです。 代入可能関係 例えば、true型はboolean型に代入できます。 このことを、本記事ではと表記します。「true型はboolean型に代入可能（Assignable）」と読みます。 これは本記事独自の表記で、一般的なものではないです。 以下は、TypeScript…","html":"<p>小ネタです。</p>\n<h2 id=\"代入可能関係\" style=\"position:relative;\"><a href=\"#%E4%BB%A3%E5%85%A5%E5%8F%AF%E8%83%BD%E9%96%A2%E4%BF%82\" aria-label=\"代入可能関係 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代入可能関係</h2>\n<p>例えば、true型はboolean型に代入できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> booleanVar<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>このことを、本記事では<code class=\"language-text\">true -> boolean</code>と表記します<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup>。「true型はboolean型に<a href=\"https://www.typescriptlang.org/docs/handbook/type-compatibility.html#subtype-vs-assignment\">代入可能（Assignable）</a>」と読みます。</p>\n<p>以下は、TypeScriptにおける様々な型の代入可能関係をグラフに表したものです。クリック / タップすると拡大します。</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 728px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/a3e802634519f17e4c25d834fdbfba38/53d44/chart.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 36.95054945054945%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'148\\'%20viewBox=\\'0%200%20400%20148\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%2074v74h401V0H0v74m156-60c0%201-8%202-17%202-20%202-34%205-37%206-3%202%200%204%207%205l-22-1a234%20234%200%2001-54-7c4%205%2048%209%20195%2017%2036%202%2039%201-30%206-70%204-109%207-124%2011-8%201-14%204-13%205l4-1a1296%201296%200%2001163-15%20261%20261%200%2000-70%2013c10-4%2027-7%2070-12%2034-4%2037-4%2022%201-11%203-19%206-16%206l3-1c3-2%2026-8%2029-8%206%200%206-6%201-6-8%200-28-6-30-9h-1c0%201%201%203%203%203%204%202%202%202-13%200l-31-9c-4-2-5-2-1%201%203%202%2016%205%2034%209l23%204%208%202-10-1c-50-2-115-6-132-9-15-1-17-2-11-4a533%20533%200%200150-8m132%2017l-8%203h-2c-1%201-2%206%200%206l13%201a291%20291%200%200164%2013c-1-2-12-6-24-8-15-3-9-2%2014%201a230%20230%200%200140%207%201005%201005%200%2000-103-16c-3%200%200-3%206-6%207-3%209-5%207-5l-7%204m66%2063v2l1%209c0%208-1%209-3%2011-4%204-17%206-46%209-23%202-30%202-12%200l24-5v-2h-2c-2%203-17%206-70%2011a498%20498%200%2001-24%201%20184%20184%200%200038-8%20429%20429%200%2001-67%208l18-4c7-2%205-2-15%202-20%205-23%205-9%201%2011-4%2018-8%2017-11%200-2-1-1-3%202s-7%205-25%2010l-11%205a3833%203833%200%200152-2c85-4%20129-7%20149-11%2010-2%2019-4%2018-6l-4%201c-6%203-19%205-40%207-22%202-32%203-16%200%2019-2%2029-5%2031-9l1-22c0-2-2-1-2%201M53%20118c-2%201-1%203%201%203%2013%203%2014%205%202%203-7-2-10-2-9-1l10%202%2010%202-8-1a245%20245%200%2001-45-7c4%204%2032%208%2098%2014%2041%204%2038%203%2038%201l-3-1h-1l-11-5-13-3%2014%205%206%203a608%20608%200%2001-30-3l-20-2c-27-4-37-7-37-10h-2\\'%20fill=\\'%23d3d3d3\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <picture>\n          <source\n              srcset=\"/static/a3e802634519f17e4c25d834fdbfba38/f4a91/chart.webp 728w,\n/static/a3e802634519f17e4c25d834fdbfba38/b5759/chart.webp 1599w\"\n              sizes=\"(max-width: 728px) 100vw, 728px\"\n              type=\"image/webp\"\n            />\n          <source\n            srcset=\"/static/a3e802634519f17e4c25d834fdbfba38/beb58/chart.png 728w,\n/static/a3e802634519f17e4c25d834fdbfba38/53d44/chart.png 1599w\"\n            sizes=\"(max-width: 728px) 100vw, 728px\"\n            type=\"image/png\"\n          />\n          <img\n            class=\"gatsby-resp-image-image\"\n            src=\"/static/a3e802634519f17e4c25d834fdbfba38/beb58/chart.png\"\n            alt=\"TypeScriptにおける様々な型の代入可能関係をグラフに表したもの\"\n            title=\"TypeScriptにおける様々な型の代入可能関係をグラフに表したもの\"\n            loading=\"lazy\"\n            decoding=\"async\"\n            style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n          />\n        </picture>\n  </a>\n    </span></p>\n<details>\n<summary>図に登場する型の定義</summary>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> NumericEnum <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">B</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">enum</span> StringEnum <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">B</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> esSymbol <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unique\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> undefinedVariable<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> nullVariable<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> voidVariable<span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> booleanVariable<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> trueVariable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> falseVariable<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> stringVariable<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> template_literalVariable<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">template literal</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">=</span> <span class=\"token string\">\"template literal\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> string_literalVariable<span class=\"token operator\">:</span> <span class=\"token string\">\"string literal\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"string literal\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> string_enumVariable<span class=\"token operator\">:</span> StringEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">A</span> <span class=\"token operator\">=</span> StringEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">A</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bigintVariable<span class=\"token operator\">:</span> bigint <span class=\"token operator\">=</span> <span class=\"token number\">123n</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bigint_literalVariable<span class=\"token operator\">:</span> <span class=\"token number\">123n</span> <span class=\"token operator\">=</span> <span class=\"token number\">123n</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> es_symbolVariable<span class=\"token operator\">:</span> <span class=\"token builtin\">symbol</span> <span class=\"token operator\">=</span> esSymbol<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> unique_es_symbolVariable<span class=\"token operator\">:</span> <span class=\"token keyword\">typeof</span> esSymbol <span class=\"token operator\">=</span> esSymbol<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> number_literalVariable<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> numberVariable<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> numeric_enumVariable<span class=\"token operator\">:</span> NumericEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">A</span> <span class=\"token operator\">=</span> NumericEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">A</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> arrayVariable<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> tupleVariable<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">functionVariable</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function-variable function\">void</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> non_primitive__object_Variable<span class=\"token operator\">:</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ObjectVariable<span class=\"token operator\">:</span> Object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> __Variable<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> unknownVariable<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> neverVariable<span class=\"token operator\">:</span> <span class=\"token builtin\">never</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</details>\n<h2 id=\"推移性\" style=\"position:relative;\"><a href=\"#%E6%8E%A8%E7%A7%BB%E6%80%A7\" aria-label=\"推移性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>推移性</h2>\n<p>推移性とは、「<code class=\"language-text\">A -> B</code>かつ<code class=\"language-text\">B -> C</code>ならば、<code class=\"language-text\">A -> C</code>である」という性質です。</p>\n<p>TypeScriptの代入可能関係は、ほとんどの部分で推移的です。</p>\n<p>例えば、true型、boolean型、unknown型について考えてみます。以下の通り、「<code class=\"language-text\">true -> boolean</code>かつ<code class=\"language-text\">boolean -> unknown</code>ならば、<code class=\"language-text\">true -> unknown</code>」です。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> v1<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// true -> boolean</span>\n<span class=\"token keyword\">const</span> v2<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// かつ</span>\n<span class=\"token comment\">// boolean -> unknown</span>\n<span class=\"token keyword\">const</span> v3<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span> <span class=\"token operator\">=</span> v2<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ならば</span>\n\n<span class=\"token keyword\">const</span> v4<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// true -> unknown</span>\n<span class=\"token keyword\">const</span> v5<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span> <span class=\"token operator\">=</span> v4<span class=\"token punctuation\">;</span></code></pre></div>\n<p>これは直感的にも納得できると思います。</p>\n<h2 id=\"推移性が成り立たないケース\" style=\"position:relative;\"><a href=\"#%E6%8E%A8%E7%A7%BB%E6%80%A7%E3%81%8C%E6%88%90%E3%82%8A%E7%AB%8B%E3%81%9F%E3%81%AA%E3%81%84%E3%82%B1%E3%83%BC%E3%82%B9\" aria-label=\"推移性が成り立たないケース permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>推移性が成り立たないケース</h2>\n<p>以上を踏まえて、代入可能関係のうち、推移的でない部分を表示したのが以下の図です。</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 728px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/49c2f910219ecceba1088bbad836273b/53d44/chart-full.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 32.28021978021978%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'129\\'%20viewBox=\\'0%200%20400%20129\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%2065v64h401V0H0v65m47-54a1622%201622%200%200150%204c36%202%2036%202%207%205-9%200-17%202-17%202-1%201-1%201%201%201%205-1%2054-6%2055-5a725%20725%200%200076%204l17%202c7%200%2020%206%2018%207l-20%201h-1l-14%201-59%204h-6v-4l-1-4v4c0%204%200%204-4%204a957%20957%200%2000-50%203c-2%200-2-1-2-6l-1-5v11h-5a1176%201176%200%2001-36%204c-5%201-8%203-6%204h1c1-2%206-3%206-2h1l34-4h5v9l1%2010V41h4a473%20473%200%200048-3%20516%20516%200%200037-1l17-1-14%201a4117%204117%200%2001-34%204c-12%202-20%205-17%207h1c0-2%206-4%2010-4h1l1-1h5l8-1a2613%202613%200%200033-2h1c0-2%201-2%2019-4a1201%201201%200%200019%200c-6%201-17%204-16%205l7-1%206-2v11l1%2011V49c0-10%200-11%202-11l9-2%208-2c4%201%204-6%200-8l-3-4-1%201v2l-5-2c-6-3-7-4-4-1%201%201%201%201-2%201a127%20127%200%2000-21-2%201065%201065%200%2000-48-5%20229%20229%200%200024%200h10c3%200%203%200%203-3%200-2%200-2-2-2a538%20538%200%2001-126%202%20516%20516%200%2001-31-2m197%203c0%202%200%202-2%202h-2l2%201%206%202c4%202%206%202%206%201-1-2%203-3%208-3%203%200%205%200%205%202l-1%201v1c0%201%201%202%202%201%202%200%202-1%201-1l-1-3c1-2%201-2-3-2l-4-1-7-2-8-1c-2-1-2-1-2%202m31%2016v3h-4l-6-2-3%201c0%201%202%203%203%202l22%205h1l7%201%209%202c5%201%2012%203%2014%205l3%201c0-3-8-6-28-10l-12-3a1295%201295%200%200172%208l-5-2%208%201a224%20224%200%200130%203c-3-2-26-5-54-8l-55-4-1-3-1-3v3M114%2079c-1%204%201%2021%202%2023%203%202%2011%206%2022%208%2011%203%206%202-16-1a156%20156%200%2001-36-8c-1%201%207%204%2016%206%2011%202%208%202-8%200a112%20112%200%2001-31-7c-1%202%2016%207%2023%207%202%200%202%200%201%201a194%20194%200%2001-50-9c-1%201%206%204%2012%206l4%201-30-5c-7-2-8-1-1%201a2935%202935%200%2000141%2013c1-1-1-1-15-4-19-4-27-7-30-10s-3-3-3-12%200-13-1-10m218%2021c-1%202-8%203-22%205-12%201-70%206-85%206l-12%201%2013-2c17-2%2029-5%2032-7l-10%202a861%20861%200%2001-53%206l24-7-2-1-29%208c-11%203-13%203-12%205l128-7a374%20374%200%200071-8%20339%20339%200%2001-35%204c8-1%2018-4%2019-5v-1a153%20153%200%2001-31%205c5-1%206-2%206-3%200-2-2-3-2-1\\'%20fill=\\'%23d3d3d3\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <picture>\n          <source\n              srcset=\"/static/49c2f910219ecceba1088bbad836273b/f4a91/chart-full.webp 728w,\n/static/49c2f910219ecceba1088bbad836273b/b5759/chart-full.webp 1599w\"\n              sizes=\"(max-width: 728px) 100vw, 728px\"\n              type=\"image/webp\"\n            />\n          <source\n            srcset=\"/static/49c2f910219ecceba1088bbad836273b/beb58/chart-full.png 728w,\n/static/49c2f910219ecceba1088bbad836273b/53d44/chart-full.png 1599w\"\n            sizes=\"(max-width: 728px) 100vw, 728px\"\n            type=\"image/png\"\n          />\n          <img\n            class=\"gatsby-resp-image-image\"\n            src=\"/static/49c2f910219ecceba1088bbad836273b/beb58/chart-full.png\"\n            alt=\"代入可能関係のうち、推移的でない部分を表示した図\"\n            title=\"代入可能関係のうち、推移的でない部分を表示した図\"\n            loading=\"lazy\"\n            decoding=\"async\"\n            style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n          />\n        </picture>\n  </a>\n    </span></p>\n<p>一気に見づらくなっちゃいました。すみません。</p>\n<p>バツの矢印は、「根本の型が先（バツのある方）の型に、他の型を経由して代入できるが、直接は代入できない」ことを表します。</p>\n<p>図にはバツの付いている型が2つありますので、それぞれ説明します。</p>\n<h3 id=\"numeric-enums\" style=\"position:relative;\"><a href=\"#numeric-enums\" aria-label=\"numeric enums permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Numeric Enums</h3>\n<p><a href=\"https://www.typescriptlang.org/docs/handbook/enums.html#numeric-enums\">Numeric Enums</a>は、メンバが数値のenum型です。</p>\n<p>図を見ると、numberリテラル型はnumber型を経由してNumeric Enums型に代入可能ですが、直接は代入できないようです。</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 621px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/3d9e84f81ce44711fe1f7377847cd948/28f43/numeric-enums.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 97.42351046698872%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'390\\'%20viewBox=\\'0%200%20400%20390\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%20195v195h137l141-1%206-8%203-7h-87v-60l-16-6c-65-22-91-36-100-53-2-4-2-4-7-4s-5-1%200-10l3-7-26-1H27v-64h21l-5-6c-23-25-10-39%2058-62l18-7c-2-8-2-8%2010-6l8%202V28h69l-5-6c-7-7-14-12-27-17l-11-5H0v195M179%203c10%205%2019%2011%2025%2018l7%207h25c23%200%2026%200%2027-2h3c2%202%205%202%2036%202l34%201v63h-27c-22%200-26%200-26%202l5%201c3%200%204%200%204%202l-2%201c-6%200-7%201-6%205%200%204%200%204-2%204l-2-4v-4h-4c-5%201-7-2-2-3%203%200%205-1%205-3l-26-1h-26l-2%205c-7%2023-21%2037-54%2057l-16%2010%202%203c2%204%201%205-10%205l-8%201-1%2030v30H84l4%208c5%2010%205%2010%201%2010h-3l2%204c8%2015%2034%2029%2096%2050l16%205h51c50%200%2051%200%2051-2%201-2%204-2%204%201%200%202%2026%202%2029-1h3c0%202%204%202%2021%202l20%201v63h-88l4%208%204%208h101V0H173l6%203m-40%2027v60h195V30H139m40%2033c1%208%202%209%203%201%200-5%201-5%203-5%201%200%202%200%202%205%200%207%202%208%202%202%200-5%202-9%204-8s2%202%202%206l1%206%201-6c-1-7-2-9-6-7h-8l-4-1v7m112%200c0%208%202%2010%202%202%201-10%206-9%206%200%200%207%202%206%202-1%200-5%201-6%203-6s2%200%202%206l1%206c2-1%202-12%200-13h-14l-1-1-1%207M131%2099l-7%207-2-3-2-4a202%20202%200%2000-38%2014c-2-1-6%201-13%203-36%2016-41%2026-23%2046l7%207h14c13%200%2014%200%2014-2l2-2%201%202c0%202%201%202%2027%202h27l5-7c5-8%206-9%207-6%202%205%203%204%2014-2%2035-19%2049-33%2057-55l3-7h-85l-8%207M28%20201v30h108v-60H28v30m62%200v9h4c6%200%209-3%207-9%200-3-1-3-4-3-4%200-4-1-4-3l-1-3c-2%200-2%202-2%209m-21%203c0%205%200%206%202%206l1-5c0-4%200-6%202-6%202-1%203%200%203%206l1%205%201-4%201-7c3-3%205%200%205%206l1%205%201-6v-6l-9-1h-9v7m132%20138v30h176v-60H201v30m63%200v9h4c5%200%207-2%207-7%200-4-2-6-6-6-3%201-3%200-3-2l-1-3-1%209m15-2c-4%204-1%2011%205%2011l4-2h-3c-3%200-4%200-5-2s-1-2%204-2%206-1%204-5c-1-3-7-3-9%200m70%200c-1%201%201%202%203%200%201-1%204%200%204%202l-3%201c-2%200-6%202-6%204%200%203%204%205%208%203h2l2%201c2%200%202%200%201-1l-1-5c0-5-2-7-5-7l-5%202\\'%20fill=\\'%23d3d3d3\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <picture>\n          <source\n              srcset=\"/static/3d9e84f81ce44711fe1f7377847cd948/6a825/numeric-enums.webp 621w\"\n              sizes=\"(max-width: 621px) 100vw, 621px\"\n              type=\"image/webp\"\n            />\n          <source\n            srcset=\"/static/3d9e84f81ce44711fe1f7377847cd948/28f43/numeric-enums.png 621w\"\n            sizes=\"(max-width: 621px) 100vw, 621px\"\n            type=\"image/png\"\n          />\n          <img\n            class=\"gatsby-resp-image-image\"\n            src=\"/static/3d9e84f81ce44711fe1f7377847cd948/28f43/numeric-enums.png\"\n            alt=\"numberリテラル型とnumber型とNumeric Enums型の代入可能関係の図。numberリテラル型はnumber型を経由してNumeric Enums型に代入可能だが、直接は代入できない\"\n            title=\"numberリテラル型とnumber型とNumeric Enums型の代入可能関係の図。numberリテラル型はnumber型を経由してNumeric Enums型に代入可能だが、直接は代入できない\"\n            loading=\"lazy\"\n            decoding=\"async\"\n            style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n          />\n        </picture>\n  </a>\n    </span></p>\n<p>試してみます。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> NumericEnum <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">B</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// number型を経由して代入できるが</span>\n<span class=\"token keyword\">const</span> v1<span class=\"token operator\">:</span> <span class=\"token number\">123</span> <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v2<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v3<span class=\"token operator\">:</span> NumericEnum <span class=\"token operator\">=</span> v2<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 直接は代入できない</span>\n<span class=\"token keyword\">const</span> v4<span class=\"token operator\">:</span> <span class=\"token number\">123</span> <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v5<span class=\"token operator\">:</span> NumericEnum <span class=\"token operator\">=</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 型エラー</span></code></pre></div>\n<p>不自然なのは、<code class=\"language-text\">number -> NumericEnum</code>である部分です。こうなっている理由はchecker.tsに書かれています。</p>\n<blockquote>\n<p>Type number is assignable to any computed numeric enum type ...（中略）... These rules exist such that enums can be used for bit-flag purposes.</p>\n<p>訳：number型は、任意の計算されたNumeric Enum型に代入できる ...（中略）... これらの規則は、Enum型をビットフラグの目的で使用できるように存在する。</p>\n<p>出典: <a href=\"https://github.com/microsoft/TypeScript/blob/main/src/compiler/checker.ts\">checker.ts、TypeScript</a>、DeepLによる訳を筆者が改変した</p>\n</blockquote>\n<p>「Enum型をビットフラグの目的で使用」とは、例えば以下のようなことです。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> Foods <span class=\"token punctuation\">{</span>\n  Ramem <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 1</span>\n  Curry <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 2</span>\n  Sushi <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 4</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> favoriteFoods<span class=\"token operator\">:</span> Foods <span class=\"token operator\">=</span> Foods<span class=\"token punctuation\">.</span>Ramem <span class=\"token operator\">|</span> Foods<span class=\"token punctuation\">.</span>Sushi<span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>favoriteFoods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span></code></pre></div>\n<p>このような使い方をするためには、Foods型に1、2、4だけでなく0〜7を代入できる必要があります。よって一般的には、number型すべてをNumeric Enums型に代入可能であるわけですね。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> flags<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> favoriteFoods<span class=\"token operator\">:</span> Foods <span class=\"token operator\">=</span> flags<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"objectnon-primitive\" style=\"position:relative;\"><a href=\"#objectnon-primitive\" aria-label=\"objectnon primitive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>object（non-primitive）</h3>\n<p>Object型や{}型には、オブジェクトの他に一部のプリミティブ型が代入できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// オブジェクト型を代入できる</span>\n<span class=\"token keyword\">const</span> v1<span class=\"token operator\">:</span> Object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hoge<span class=\"token operator\">:</span> <span class=\"token number\">123</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v2<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hoge<span class=\"token operator\">:</span> <span class=\"token number\">123</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 一部のプリミティブ型も代入できる</span>\n<span class=\"token keyword\">const</span> v3<span class=\"token operator\">:</span> Object <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v4<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>一瞬「なぜ？」と思ってしまいますが、オブジェクトラッパーのことを考えると「まぁ一理あるか……」となります。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> v<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Booleanオブジェクトラッパーのことを考えると、toStringプロパティがあるオブジェクトにも見える</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"true\"</span>\n\n<span class=\"token comment\">// なので以下ができる</span>\n<span class=\"token keyword\">const</span> v2<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">toString</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v3<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span></code></pre></div>\n<p>一方、object型はnon-primitive型とも呼ばれ、プリミティブ型を代入できません。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// オブジェクト型を代入できる</span>\n<span class=\"token keyword\">const</span> v1<span class=\"token operator\">:</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hoge<span class=\"token operator\">:</span> <span class=\"token number\">123</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// プリミティブ型は代入できない</span>\n<span class=\"token keyword\">const</span> v2<span class=\"token operator\">:</span> object <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 型エラー</span></code></pre></div>\n<p>ところが図を見ると、他の型を経由することでプリミティブ型を代入できるとのことです。</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 728px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/49c2f910219ecceba1088bbad836273b/53d44/chart-full.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 32.28021978021978%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'129\\'%20viewBox=\\'0%200%20400%20129\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%2065v64h401V0H0v65m47-54a1622%201622%200%200150%204c36%202%2036%202%207%205-9%200-17%202-17%202-1%201-1%201%201%201%205-1%2054-6%2055-5a725%20725%200%200076%204l17%202c7%200%2020%206%2018%207l-20%201h-1l-14%201-59%204h-6v-4l-1-4v4c0%204%200%204-4%204a957%20957%200%2000-50%203c-2%200-2-1-2-6l-1-5v11h-5a1176%201176%200%2001-36%204c-5%201-8%203-6%204h1c1-2%206-3%206-2h1l34-4h5v9l1%2010V41h4a473%20473%200%200048-3%20516%20516%200%200037-1l17-1-14%201a4117%204117%200%2001-34%204c-12%202-20%205-17%207h1c0-2%206-4%2010-4h1l1-1h5l8-1a2613%202613%200%200033-2h1c0-2%201-2%2019-4a1201%201201%200%200019%200c-6%201-17%204-16%205l7-1%206-2v11l1%2011V49c0-10%200-11%202-11l9-2%208-2c4%201%204-6%200-8l-3-4-1%201v2l-5-2c-6-3-7-4-4-1%201%201%201%201-2%201a127%20127%200%2000-21-2%201065%201065%200%2000-48-5%20229%20229%200%200024%200h10c3%200%203%200%203-3%200-2%200-2-2-2a538%20538%200%2001-126%202%20516%20516%200%2001-31-2m197%203c0%202%200%202-2%202h-2l2%201%206%202c4%202%206%202%206%201-1-2%203-3%208-3%203%200%205%200%205%202l-1%201v1c0%201%201%202%202%201%202%200%202-1%201-1l-1-3c1-2%201-2-3-2l-4-1-7-2-8-1c-2-1-2-1-2%202m31%2016v3h-4l-6-2-3%201c0%201%202%203%203%202l22%205h1l7%201%209%202c5%201%2012%203%2014%205l3%201c0-3-8-6-28-10l-12-3a1295%201295%200%200172%208l-5-2%208%201a224%20224%200%200130%203c-3-2-26-5-54-8l-55-4-1-3-1-3v3M114%2079c-1%204%201%2021%202%2023%203%202%2011%206%2022%208%2011%203%206%202-16-1a156%20156%200%2001-36-8c-1%201%207%204%2016%206%2011%202%208%202-8%200a112%20112%200%2001-31-7c-1%202%2016%207%2023%207%202%200%202%200%201%201a194%20194%200%2001-50-9c-1%201%206%204%2012%206l4%201-30-5c-7-2-8-1-1%201a2935%202935%200%2000141%2013c1-1-1-1-15-4-19-4-27-7-30-10s-3-3-3-12%200-13-1-10m218%2021c-1%202-8%203-22%205-12%201-70%206-85%206l-12%201%2013-2c17-2%2029-5%2032-7l-10%202a861%20861%200%2001-53%206l24-7-2-1-29%208c-11%203-13%203-12%205l128-7a374%20374%200%200071-8%20339%20339%200%2001-35%204c8-1%2018-4%2019-5v-1a153%20153%200%2001-31%205c5-1%206-2%206-3%200-2-2-3-2-1\\'%20fill=\\'%23d3d3d3\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <picture>\n          <source\n              srcset=\"/static/49c2f910219ecceba1088bbad836273b/f4a91/chart-full.webp 728w,\n/static/49c2f910219ecceba1088bbad836273b/b5759/chart-full.webp 1599w\"\n              sizes=\"(max-width: 728px) 100vw, 728px\"\n              type=\"image/webp\"\n            />\n          <source\n            srcset=\"/static/49c2f910219ecceba1088bbad836273b/beb58/chart-full.png 728w,\n/static/49c2f910219ecceba1088bbad836273b/53d44/chart-full.png 1599w\"\n            sizes=\"(max-width: 728px) 100vw, 728px\"\n            type=\"image/png\"\n          />\n          <img\n            class=\"gatsby-resp-image-image\"\n            src=\"/static/49c2f910219ecceba1088bbad836273b/beb58/chart-full.png\"\n            alt=\"代入可能関係のうち、推移的でない部分を表示した図\"\n            title=\"代入可能関係のうち、推移的でない部分を表示した図\"\n            loading=\"lazy\"\n            decoding=\"async\"\n            style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n          />\n        </picture>\n  </a>\n    </span></p>\n<p>やってみます。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// 他の型を経由することでobject型にプリミティブ型を代入できる</span>\n<span class=\"token keyword\">const</span> v1<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v2<span class=\"token operator\">:</span> Object <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v3<span class=\"token operator\">:</span> object <span class=\"token operator\">=</span> v2<span class=\"token punctuation\">;</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 実行時エラー</span>\n<span class=\"token comment\">//     ^? (method) ObjectConstructor.create(o: object | null): any (+1 overload)</span></code></pre></div>\n<p>上記のコードは型検査をパスしますが、実行時にエラーになります。<code class=\"language-text\">Object.create</code>の引数は<code class=\"language-text\">object | null</code>型を期待しているのに、実際には<code class=\"language-text\">true</code>が渡されるからです。</p>\n<p>コードの中で良くなさそうなのは、<code class=\"language-text\">Object -> object</code>である部分です。Object型の変数はプリミティブ値になりうるのに、non-primitiveであるobject型の変数に代入できてしまっています。</p>\n<p>なぜこうなっているのか？という理由を調べたのですが、公式の明確な記述は見つけられませんでした。</p>\n<p><a href=\"https://github.com/microsoft/TypeScript/pull/12501/files#diff-d9ab6589e714c71e657f601cf30ff51dfc607fc98419bf72e04f6b0fa92cc4b8R7147\"><code class=\"language-text\">Object -> object</code>は、typescript@2.2.0でobject型が導入された当初からの挙動</a>で、<a href=\"https://github.com/microsoft/TypeScript/pull/12501\">当時のPR</a>や<a href=\"https://github.com/microsoft/TypeScript/issues/1809\">提案のIssue</a>にヒントがないかと読んでみたのですが、結局わかりませんでした。</p>\n<p>したがって完全な予想になりますが、おそらくコードの互換性のための挙動なのかなと思いました。object型の導入以前に書かれていたコードと、それ以降の新しいコードを共存させるために必要だった……とか？うーん。</p>\n<p>もし理由をご存知であれば教えていただけると嬉しいです。</p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>代入可能関係の一部が推移的でないことを説明し、そのような2つのケースについて見ました。</p>\n<p>正直、ここに挙げたようなコードは業務で1度も書いたことがないので、あまり気にしなくても良いという説があります。小ネタということでご容赦ください。</p>\n<p>代入可能関係の図を生成したコードは以下にあります。</p>\n<p><a href=\"https://github.com/sititou70/ts-extends-hierarchy\">https://github.com/sititou70/ts-extends-hierarchy</a></p>\n<p>暑い中ありがとうございました。</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">これは本記事独自の表記で、一般的なものではないです。<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a></li>\n</ol>\n</div>","frontmatter":{"title":"TypeScriptにおける代入可能関係の推移性","date":"2023/08/10"},"fields":{"slug":"/TypeScriptにおける代入可能関係の推移性/"},"id":"89ddbcc0-ed71-5a69-9d55-9677eab3e6cf"},"firstImage":{"imageFile":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282838","images":{"fallback":{"src":"/static/a3e802634519f17e4c25d834fdbfba38/c1e29/chart.png","srcSet":"/static/a3e802634519f17e4c25d834fdbfba38/54eeb/chart.png 400w,\n/static/a3e802634519f17e4c25d834fdbfba38/c7930/chart.png 800w,\n/static/a3e802634519f17e4c25d834fdbfba38/c1e29/chart.png 1599w","sizes":"(min-width: 1599px) 1599px, 100vw"},"sources":[{"srcSet":"/static/a3e802634519f17e4c25d834fdbfba38/de315/chart.webp 400w,\n/static/a3e802634519f17e4c25d834fdbfba38/74833/chart.webp 800w,\n/static/a3e802634519f17e4c25d834fdbfba38/48d66/chart.webp 1599w","type":"image/webp","sizes":"(min-width: 1599px) 1599px, 100vw"}]},"width":1599,"height":591}}}},"relatedMarkdownRemarks":{"posts":[{"id":"84bf9a79-dd68-55d1-a1b3-60ffd3784554","frontmatter":{"draft":null}},{"id":"29b79017-f96d-5b04-8d01-5b8ee761ebed","frontmatter":{"draft":null}},{"id":"3a3c4125-9986-53bb-8b96-ae29936c96ab","frontmatter":{"draft":null}},{"id":"f920a8a8-f5fe-57c9-8792-95c93d2b74eb","frontmatter":{"draft":null}},{"id":"82d43655-ea2a-52cd-97a3-16b7b28ad150","frontmatter":{"draft":null}},{"id":"f49ce388-e81c-5425-af59-9902f125c20f","frontmatter":{"draft":null}},{"id":"871ac696-39ea-5c64-94f3-5dc4b73b5770","frontmatter":{"draft":true}},{"id":"3d71b3f9-8d6b-58a4-b6cb-8293daf99d74","frontmatter":{"draft":null}},{"id":"c2db052c-95c6-5094-935b-9eb39f5c762a","frontmatter":{"draft":null}},{"id":"75696ec6-74a3-5046-8a3c-f39b36d92311","frontmatter":{"draft":null}},{"id":"50d3cc2a-de7a-5b9a-a8d8-754415fe4d94","frontmatter":{"draft":null}},{"id":"01deffb8-0d62-54c6-9e41-20832cbc3c6e","frontmatter":{"draft":null}},{"id":"2f30c3f1-0d66-590b-8dba-7836df701d46","frontmatter":{"draft":null}},{"id":"78349b16-6e41-5fef-ae38-bcdc5ff297ef","frontmatter":{"draft":true}},{"id":"5dba01b8-593d-5295-b135-16df1c6295e5","frontmatter":{"draft":null}},{"id":"0116f663-28d1-507a-b5ab-b189801dd408","frontmatter":{"draft":true}},{"id":"c7a5adfb-149b-5469-ba35-7421e2101951","frontmatter":{"draft":null}},{"id":"63f3c7ad-6c59-52b5-9816-78fd348955ff","frontmatter":{"draft":true}},{"id":"b4251348-b618-5b5b-a2c8-e4c6b2431b83","frontmatter":{"draft":true}},{"id":"ed7af7f9-75f5-59be-9063-de564576eed7","frontmatter":{"draft":true}},{"id":"eba9aa6a-6e21-5f1b-a0eb-7b6bfb1e04f1","frontmatter":{"draft":null}},{"id":"e322eac2-bd89-5347-b20d-d050d303a6be","frontmatter":{"draft":null}},{"id":"dd0c41cf-0a03-5b89-b5a2-f64859aeae63","frontmatter":{"draft":null}},{"id":"12222bfa-2e8e-51ee-99d8-8a19902351f5","frontmatter":{"draft":null}},{"id":"7d79eb4b-cd4a-5621-a67a-91d9a24dce05","frontmatter":{"draft":null}},{"id":"e4fb8478-b1ad-59eb-95e8-8c5e0500d3f4","frontmatter":{"draft":true}},{"id":"e83330dc-2312-5ae6-95fa-53e86909f42b","frontmatter":{"draft":true}},{"id":"bfee69af-7d7f-5d87-9680-d2e9b60f8416","frontmatter":{"draft":null}},{"id":"3908aafc-c8d3-5c67-821f-0866592449f2","frontmatter":{"draft":true}},{"id":"d4d1afa4-f2f9-5942-ae36-2826fb938af5","frontmatter":{"draft":null}},{"id":"1086a735-7173-58cc-a813-c540a563aedf","frontmatter":{"draft":false}},{"id":"49cf25c1-03f6-575e-8c2f-638ccd6198ea","frontmatter":{"draft":null}},{"id":"a6c64123-b824-5224-8027-90eb12040396","frontmatter":{"draft":null}},{"id":"067a602f-4581-5707-b896-73190dd8c889","frontmatter":{"draft":null}},{"id":"0c5568c9-6d87-56ed-ab0e-caeb9c1aafa4","frontmatter":{"draft":null}},{"id":"1162dccb-e1bf-576d-a5c6-0993394feb0a","frontmatter":{"draft":true}},{"id":"1509de3c-7308-5e40-a885-f5ebdb089774","frontmatter":{"draft":null}},{"id":"27f10a38-0ecb-539f-a717-7e40a41bbd10","frontmatter":{"draft":null}},{"id":"2cfd9e33-b4e1-53e4-884d-d8a6760f3387","frontmatter":{"draft":true}},{"id":"3b696b96-130d-50de-a673-dc1367f32387","frontmatter":{"draft":null}},{"id":"3c14921d-1ba3-5a7a-93a2-757f3a03ee3a","frontmatter":{"draft":null}},{"id":"46a22c41-5455-557c-85d4-973a6e2220ee","frontmatter":{"draft":null}},{"id":"48c65a15-67ca-57d0-9edc-ebcb868f7ad2","frontmatter":{"draft":true}},{"id":"4d43646f-8aa6-52b6-b0b6-5160f0be2b05","frontmatter":{"draft":null}},{"id":"4ed3b747-2001-54f4-9661-3acab89ce275","frontmatter":{"draft":null}},{"id":"4edc1b46-b395-5783-af6a-818b8fc9c2dc","frontmatter":{"draft":null}},{"id":"50951bb1-eb92-5663-a3d8-8f35f73a1322","frontmatter":{"draft":null}},{"id":"5888c50d-8414-5e8f-b0dc-28a31b29053d","frontmatter":{"draft":null}},{"id":"69a4aa90-b728-522c-b34f-abee49825c45","frontmatter":{"draft":true}},{"id":"73ab4455-f04d-5320-bf3a-90b9f7441d13","frontmatter":{"draft":null}},{"id":"73d6ab42-b3e6-5663-a175-b1f3d69c29e1","frontmatter":{"draft":null}},{"id":"75550af2-8134-5467-a07d-abbb5a4f6b7c","frontmatter":{"draft":true}},{"id":"7778d041-a5bf-536a-a36f-c0dbc5e08ac7","frontmatter":{"draft":true}},{"id":"7a8fc278-a847-5b68-8b74-a83193ba3f55","frontmatter":{"draft":null}},{"id":"7d6499d9-277c-5f07-b8b1-98ae40c50c42","frontmatter":{"draft":null}},{"id":"8b3e46c2-1a1e-5af0-8900-7972c7285d15","frontmatter":{"draft":null}},{"id":"8f7b1b24-7738-5b97-bfb6-fd763f11a664","frontmatter":{"draft":true}},{"id":"961ec1e6-3f2b-59d9-a33f-dad76cf67f47","frontmatter":{"draft":null}},{"id":"97f01467-e3a1-58e1-b2a4-db77354cc1a3","frontmatter":{"draft":null}},{"id":"9f02de74-61a0-5daf-a048-1c1022e08fe4","frontmatter":{"draft":null}},{"id":"9f24363b-ee3e-54bf-8a18-46ea3b269bea","frontmatter":{"draft":null}},{"id":"a091877c-69b8-59f9-8963-1af334fd573c","frontmatter":{"draft":null}},{"id":"a190aac4-0483-5e02-b1d3-261f3b5f313a","frontmatter":{"draft":null}},{"id":"be594923-185e-5cca-95b6-5267b3c9fc8c","frontmatter":{"draft":null}},{"id":"c2249b7b-b97e-5cf4-8ea9-8024e96851b7","frontmatter":{"draft":true}},{"id":"c5e2431a-cf05-5024-b833-e1c69f680d44","frontmatter":{"draft":null}},{"id":"c6def021-b8da-5dbe-ad3e-811d9286424d","frontmatter":{"draft":true}},{"id":"cbdf3192-973c-5d87-9cf1-bb9110e9a169","frontmatter":{"draft":null}},{"id":"d29b4513-0609-5cfc-af49-817467dbed1f","frontmatter":{"draft":null}},{"id":"db26c6b9-37b4-5cc4-b1ec-c61dc667863e","frontmatter":{"draft":null}},{"id":"e376b2d4-df91-5b82-af7a-a8d02763e922","frontmatter":{"draft":true}},{"id":"ebae7878-c4ee-505e-81e2-3d3fc47ea826","frontmatter":{"draft":true}},{"id":"f06a6ae0-e961-504c-8dab-a60489c0557a","frontmatter":{"draft":true}},{"id":"f5a25ce1-67a6-51b2-9bf1-f9fbacb41ad1","frontmatter":{"draft":true}},{"id":"fd6eab68-17d3-5395-8b2b-54a6efe43ebb","frontmatter":{"draft":null}}]}},"pageContext":{"id":"89ddbcc0-ed71-5a69-9d55-9677eab3e6cf"}},"staticQueryHashes":["1530353647","2576926420","63159454"]}